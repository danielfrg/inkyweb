---
import Welcome from "../components/Welcome.astro";
import Layout from "../layouts/Layout.astro";

const API_URL = "http://localhost:3000/api/v1/displays";
---

<Layout>
  <header class="bg-black">
    <div class="mx-auto flex max-w-3xl items-center justify-between px-4 py-4 sm:px-6 lg:px-8">
      <div class="flex items-center space-x-3">
        <h1 class="prose dark:prose-invert text-2xl font-bold">
          PiDisplay Controller
        </h1>
      </div>
    </div>
  </header>

<main class="m-[8px] mx-auto px-[8px] h-[calc(100vh-64px-16px)] max-w-7xl rounded-sm"

        x-data=`{
          displays: [],
          selectedDisplay: null,
          fetchDisplays() {
              fetch("${API_URL}")
              .then(res => res.json())
              .then(data => this.displays = Array.isArray(data) ? data : [data])
              .catch(err => console.error(err));
          },
          selectDisplay(display) {
            this.selectedDisplay = display;
            console.log(this.selectedDisplay);
          },
          updateDisplay() {
            // Example: sending an update request using the IP address
            if (!this.selectedDisplay) return;
            fetch("http://" + this.selectedDisplay.ip + "/update", {
              method: 'POST',
              headers: {'Content-Type': 'application/json'},
              body: JSON.stringify({
                url: this.selectedDisplay.url,
                type: this.selectedDisplay.type
              })
            })
            .then(res => res.json())
            .then(data => console.log('Display updated:', data))
            .catch(err => console.error(err));
          }
        }`
        x-init="fetchDisplays()"
  >
    <div class="grid h-full grid-cols-1 grid-cols-4 gap-2 xl:gap-8">
      <!-- List of Displays -->
      <div
        class="lg:col-span-1"
      >
        <div class="">
          <div class="px-4 py-5">
            <h2 class="text-lg font-medium text-white">Displays</h2>
          </div>
          <ul class="divide-y divide-gray-200">
            <template x-for="display in displays" :key="display.id">
              <li
                class="cursor-pointer rounded-sm px-4 py-4 text-white hover:bg-zinc-900"
                @click="selectDisplay(display)"
              >
                <div class="flex items-center justify-between">
                  <span class="text-sm font-medium" x-text="display.name"></span>
                  <div>
                    <span class="text-sm font-medium" x-text="display.ip"></span>
                  </div>
                </div>
              </li>
            </template>
          </ul>
        </div>
      </div>

      <!-- Display Details -->
      <div class="col-span-3 h-full rounded-lg bg-zinc-900 ring-1 ring-white/12">
          <div class="px-4 py-5">
            <div class="flex items-center justify-between">
              <h2 class="text-lg font-medium text-white">Display Details</h2>
            </div>
          </div>
          <div class="px-4 py-5">
            <!-- Only show the form if a display is selected -->
            <div x-show="selectedDisplay" class="grid grid-cols-1 gap-6">
              <div>
                <label class="my-label">URL</label>
                <input
                  type="text"
                  class="my-input"
                  x-model="selectedDisplay.url"
                  placeholder="https://"
                />
              </div>
              <div>
                <label class="my-label">Display Type</label>
                <select class="my-select" x-model="selectedDisplay.type">
                  <option value="inky-impression-7-3">
                    Inky Impression 7.3
                  </option>
                  <!-- Add more options as needed -->
                </select>
              </div>
              <div>
                <label class="my-label">Preview</label>
                <div class="mt-1 rounded-lg border-2 border-dashed border-gray-600 p-12 text-center">
                  <!-- You can dynamically update the preview based on your needs -->
                  <span class="mt-2 block text-sm font-medium text-gray-600">
                    Last updated: 2024-03-15 14:30
                  </span>
                </div>
              </div>
              <div class="flex justify-end">
                <button class="my-button" @click="updateDisplay()">Update Display</button>
              </div>
            </div>
            <!-- Optional: Message when no display is selected -->
            <div x-show="!selectedDisplay" class="text-white">
              Please select a display from the list.
            </div>
          </div>
        </div>
    </div>
  </main>
</Layout>
